name: Deploy Soroban Security Portal

on:
  workflow_dispatch:
    inputs:
      apiUrl:
        description: 'API URL'
        required: false
        default: 'https://sorobansecurity.com'
      hostName:
        description: 'Host name'
        required: false
        default: 'sorobansecurity.com'
      envName:
        description: 'Environment name'
        required: false
        default: 'prod'

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.3

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: 'latest'

      - name: Write kubeconfig from secret
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config

      - name: Deploy via Helm
        env:
          HELM_EXPERIMENTAL_OCI: '1'
          API_URL: ${{ inputs.apiUrl }}
          HOST_NAME: ${{ inputs.hostName }}
          ENV_NAME: ${{ inputs.envName }}
        run: |
          # Generate build number (yyMMddHHmmss)
          buildNumber=$(date +'%y%m%d%H%M%S')
          echo "Deploying Soroban Security Portal with build=$buildNumber..."

          helm upgrade sorobansecurityportal \
            oci://registry-1.docker.io/georgii4inferara/sorobansecurityportal \
            --devel \
            --namespace sorobansecurityportal-ns \
            --create-namespace \
            --install \
            --kubeconfig "$HOME/.kube/config" \
            --set global.app.build="$buildNumber" \
            --set global.app.domain="$HOST_NAME" \
            --set global.sorobansecurityportalui.apiUrl="$API_URL" \
            --set global.environment.namespace=sorobansecurityportal-ns \
            --set global.environment.name="$ENV_NAME" \
            --set global.google.clientSecret="${{ secrets.GOOGLE_CLIENT_SECRET }}" \
            --set global.google.clientId="${{ secrets.GOOGLE_CLIENT_ID }}" \
            --set global.postgres.userName="${{ secrets.POSTGRES_USER }}" \
            --set global.postgres.password="${{ secrets.POSTGRES_PASSWORD }}" \
            --set global.redis.user="${{ secrets.REDIS_USER }}" \
            --set global.redis.password="${{ secrets.REDIS_PASSWORD }}"
