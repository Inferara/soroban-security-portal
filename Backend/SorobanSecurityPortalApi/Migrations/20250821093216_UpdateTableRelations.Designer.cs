// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Pgvector;
using SorobanSecurityPortalApi.Common.Data;
using SorobanSecurityPortalApi.Models.DbModels;

#nullable disable

namespace SorobanSecurityPortalApi.Migrations
{
    [DbContext(typeof(Db))]
    [Migration("20250821093216_UpdateTableRelations")]
    partial class UpdateTableRelations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "vector");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SorobanSecurityPortalApi.Models.DbModels.AuditorModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<Vector>("Embedding")
                        .HasColumnType("vector(3072)")
                        .HasColumnName("embedding");

                    b.Property<byte[]>("Image")
                        .HasColumnType("bytea")
                        .HasColumnName("image");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("url");

                    b.HasKey("Id")
                        .HasName("pk_auditor");

                    b.ToTable("auditor");
                });

            modelBuilder.Entity("SorobanSecurityPortalApi.Models.DbModels.CategoryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BgColor")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("bg_color");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("TextColor")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("text_color");

                    b.HasKey("Id")
                        .HasName("pk_category");

                    b.ToTable("category");
                });

            modelBuilder.Entity("SorobanSecurityPortalApi.Models.DbModels.ClientSsoModel", b =>
                {
                    b.Property<int>("ClientSsoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("client_sso_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ClientSsoId"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<int>("LoginType")
                        .HasColumnType("integer")
                        .HasColumnName("login_type");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<Dictionary<string, string>>("Settings")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("settings");

                    b.HasKey("ClientSsoId")
                        .HasName("pk_client_sso");

                    b.ToTable("client_sso");
                });

            modelBuilder.Entity("SorobanSecurityPortalApi.Models.DbModels.CompanyModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<Vector>("Embedding")
                        .HasColumnType("vector(3072)")
                        .HasColumnName("embedding");

                    b.Property<byte[]>("Image")
                        .HasColumnType("bytea")
                        .HasColumnName("image");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("url");

                    b.HasKey("Id")
                        .HasName("pk_company");

                    b.ToTable("company");
                });

            modelBuilder.Entity("SorobanSecurityPortalApi.Models.DbModels.FileModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("author");

                    b.Property<byte[]>("BinFile")
                        .HasColumnType("bytea")
                        .HasColumnName("bin_file");

                    b.Property<string>("ContainerGuid")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("container_guid");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_file");

                    b.ToTable("file");
                });

            modelBuilder.Entity("SorobanSecurityPortalApi.Models.DbModels.LoginHistoryModel", b =>
                {
                    b.Property<int>("LoginHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("login_history_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LoginHistoryId"));

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<string>("CodeChallenge")
                        .HasColumnType("text")
                        .HasColumnName("code_challenge");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created");

                    b.Property<bool>("IsOffline")
                        .HasColumnType("boolean")
                        .HasColumnName("is_offline");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("login");

                    b.Property<int>("LoginId")
                        .HasColumnType("integer")
                        .HasColumnName("login_id");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("picture");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("text")
                        .HasColumnName("refresh_token");

                    b.Property<DateTime>("ValidUntilTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("valid_until_time");

                    b.HasKey("LoginHistoryId")
                        .HasName("pk_login_history");

                    b.ToTable("login_history");
                });

            modelBuilder.Entity("SorobanSecurityPortalApi.Models.DbModels.LoginModel", b =>
                {
                    b.Property<int>("LoginId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("login_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LoginId"));

                    b.Property<List<ConnectedAccountModel>>("ConnectedAccounts")
                        .HasColumnType("jsonb")
                        .HasColumnName("connected_accounts");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.Property<byte[]>("Image")
                        .HasColumnType("bytea")
                        .HasColumnName("image");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("boolean")
                        .HasColumnName("is_enabled");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("login");

                    b.Property<int>("LoginType")
                        .HasColumnType("integer")
                        .HasColumnName("login_type");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password_hash");

                    b.Property<string>("PersonalInfo")
                        .HasColumnType("text")
                        .HasColumnName("personal_info");

                    b.Property<int>("Role")
                        .HasColumnType("integer")
                        .HasColumnName("role");

                    b.HasKey("LoginId")
                        .HasName("pk_login");

                    b.ToTable("login");

                    b.HasData(
                        new
                        {
                            LoginId = 1,
                            ConnectedAccounts = new List<ConnectedAccountModel>(),
                            Created = new DateTime(2025, 8, 21, 9, 32, 16, 427, DateTimeKind.Utc).AddTicks(6818),
                            CreatedBy = "system",
                            Email = "admin@sorobansecurity.com",
                            FullName = "Admin",
                            IsEnabled = true,
                            Login = "admin@sorobansecurity.com",
                            LoginType = 1,
                            PasswordHash = "wh+Wm18D0z1D4E+PE252gg==",
                            PersonalInfo = "",
                            Role = 2
                        });
                });

            modelBuilder.Entity("SorobanSecurityPortalApi.Models.DbModels.ProtocolModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CompanyId")
                        .HasColumnType("integer")
                        .HasColumnName("company_id");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<Vector>("Embedding")
                        .HasColumnType("vector(3072)")
                        .HasColumnName("embedding");

                    b.Property<byte[]>("Image")
                        .HasColumnType("bytea")
                        .HasColumnName("image");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("url");

                    b.HasKey("Id")
                        .HasName("pk_protocol");

                    b.HasIndex("CompanyId")
                        .HasDatabaseName("ix_protocol_company_id");

                    b.ToTable("protocol");
                });

            modelBuilder.Entity("SorobanSecurityPortalApi.Models.DbModels.ReportModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AuditorId")
                        .HasColumnType("integer")
                        .HasColumnName("auditor_id");

                    b.Property<string>("AuditorLegacy")
                        .HasColumnType("text")
                        .HasColumnName("auditor_legacy");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("author");

                    b.Property<byte[]>("BinFile")
                        .HasColumnType("bytea")
                        .HasColumnName("bin_file");

                    b.Property<string>("Company")
                        .HasColumnType("text")
                        .HasColumnName("company");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date");

                    b.Property<Vector>("Embedding")
                        .HasColumnType("vector(3072)")
                        .HasColumnName("embedding");

                    b.Property<byte[]>("Image")
                        .HasColumnType("bytea")
                        .HasColumnName("image");

                    b.Property<DateTime>("LastActionAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_action_at");

                    b.Property<string>("LastActionBy")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("last_action_by");

                    b.Property<string>("MdFile")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("md_file");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int?>("ProtocolId")
                        .HasColumnType("integer")
                        .HasColumnName("protocol_id");

                    b.Property<string>("ProtocolLegacy")
                        .HasColumnType("text")
                        .HasColumnName("protocol_legacy");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("pk_report");

                    b.HasIndex("AuditorId")
                        .HasDatabaseName("ix_report_auditor_id");

                    b.HasIndex("ProtocolId")
                        .HasDatabaseName("ix_report_protocol_id");

                    b.ToTable("report");
                });

            modelBuilder.Entity("SorobanSecurityPortalApi.Models.DbModels.SettingsModel", b =>
                {
                    b.Property<int>("SettingsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("settings_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SettingsId"));

                    b.Property<Dictionary<string, string>>("Content")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("content");

                    b.Property<int?>("EntityId")
                        .HasColumnType("integer")
                        .HasColumnName("entity_id");

                    b.Property<int>("SettingsType")
                        .HasColumnType("integer")
                        .HasColumnName("settings_type");

                    b.HasKey("SettingsId")
                        .HasName("pk_settings");

                    b.ToTable("settings");
                });

            modelBuilder.Entity("SorobanSecurityPortalApi.Models.DbModels.SubscriptionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.HasKey("Id")
                        .HasName("pk_subscription");

                    b.ToTable("subscription");
                });

            modelBuilder.Entity("SorobanSecurityPortalApi.Models.DbModels.VulnerabilityModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Auditor")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("auditor");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("author");

                    b.Property<List<string>>("Categories")
                        .HasColumnType("jsonb")
                        .HasColumnName("categories");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("company");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<Vector>("Embedding")
                        .HasColumnType("vector(3072)")
                        .HasColumnName("embedding");

                    b.Property<DateTime>("LastActionAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_action_at");

                    b.Property<string>("LastActionBy")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("last_action_by");

                    b.Property<string>("PicturesContainerGuid")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("pictures_container_guid");

                    b.Property<string>("Protocol")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("protocol");

                    b.Property<int?>("ReportId")
                        .HasColumnType("integer")
                        .HasColumnName("report_id");

                    b.Property<string>("ReportUrl")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("report_url");

                    b.Property<string>("Severity")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("severity");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("source");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("status");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("pk_vulnerability");

                    b.HasIndex("ReportId")
                        .HasDatabaseName("ix_vulnerability_report_id");

                    b.ToTable("vulnerability");
                });

            modelBuilder.Entity("SorobanSecurityPortalApi.Models.DbModels.ProtocolModel", b =>
                {
                    b.HasOne("SorobanSecurityPortalApi.Models.DbModels.CompanyModel", "Company")
                        .WithMany("Protocols")
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_protocol_company_company_id");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("SorobanSecurityPortalApi.Models.DbModels.ReportModel", b =>
                {
                    b.HasOne("SorobanSecurityPortalApi.Models.DbModels.AuditorModel", "Auditor")
                        .WithMany("Reports")
                        .HasForeignKey("AuditorId")
                        .HasConstraintName("fk_report_auditor_auditor_id");

                    b.HasOne("SorobanSecurityPortalApi.Models.DbModels.ProtocolModel", "Protocol")
                        .WithMany("Reports")
                        .HasForeignKey("ProtocolId")
                        .HasConstraintName("fk_report_protocol_protocol_id");

                    b.Navigation("Auditor");

                    b.Navigation("Protocol");
                });

            modelBuilder.Entity("SorobanSecurityPortalApi.Models.DbModels.VulnerabilityModel", b =>
                {
                    b.HasOne("SorobanSecurityPortalApi.Models.DbModels.ReportModel", "Report")
                        .WithMany("Vulnerabilities")
                        .HasForeignKey("ReportId")
                        .HasConstraintName("fk_vulnerability_report_report_id");

                    b.Navigation("Report");
                });

            modelBuilder.Entity("SorobanSecurityPortalApi.Models.DbModels.AuditorModel", b =>
                {
                    b.Navigation("Reports");
                });

            modelBuilder.Entity("SorobanSecurityPortalApi.Models.DbModels.CompanyModel", b =>
                {
                    b.Navigation("Protocols");
                });

            modelBuilder.Entity("SorobanSecurityPortalApi.Models.DbModels.ProtocolModel", b =>
                {
                    b.Navigation("Reports");
                });

            modelBuilder.Entity("SorobanSecurityPortalApi.Models.DbModels.ReportModel", b =>
                {
                    b.Navigation("Vulnerabilities");
                });
#pragma warning restore 612, 618
        }
    }
}
